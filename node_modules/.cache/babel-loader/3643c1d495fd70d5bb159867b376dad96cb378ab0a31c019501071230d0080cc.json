{"ast":null,"code":"import { CREATE, UPDATE, DELETE, GET_ALL, GET_ONE } from \"../constants/actionTypes\";\nimport * as api from \"../api/index\";\nexport const getAllAdventurePosts = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.getAllAdventurePosts();\n    console.log(data);\n    dispatch({\n      type: GET_ALL,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getAdventurePost = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.getAdventurePost(id);\n    dispatch({\n      type: GET_ONE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const createAdventurePost = post => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.createAdventurePost(post);\n    dispatch({\n      type: CREATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const updateAdventurePost = (id, post) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updateAdventurePost(id, post);\n    dispatch({\n      type: UPDATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const deleteAdventurePost = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.deleteAdventurePost(id);\n    dispatch({\n      type: DELETE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const likeAdventurePost = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.likeAdventurePost(id);\n    dispatch({\n      type: UPDATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"names":["CREATE","UPDATE","DELETE","GET_ALL","GET_ONE","api","getAllAdventurePosts","dispatch","data","console","log","type","payload","error","getAdventurePost","id","createAdventurePost","post","updateAdventurePost","deleteAdventurePost","likeAdventurePost"],"sources":["/Users/rahulpatil/Desktop/react-applications/buddy/client/src/actions/adventurePosts.js"],"sourcesContent":["import {\n  CREATE,\n  UPDATE,\n  DELETE,\n  GET_ALL,\n  GET_ONE,\n} from \"../constants/actionTypes\";\n\nimport * as api from \"../api/index\";\n\nexport const getAllAdventurePosts = () => async (dispatch) => {\n  try {\n    const { data } = await api.getAllAdventurePosts();\n    console.log(data);\n    dispatch({\n      type: GET_ALL,\n      payload: data,\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getAdventurePost = (id) => async (dispatch) => {\n  try {\n    const { data } = await api.getAdventurePost(id);\n    dispatch({\n      type: GET_ONE,\n      payload: data,\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const createAdventurePost = (post) => async (dispatch) => {\n  try {\n    const { data } = await api.createAdventurePost(post);\n    dispatch({\n      type: CREATE,\n      payload: data,\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const updateAdventurePost = (id, post) => async (dispatch) => {\n  try {\n    const { data } = await api.updateAdventurePost(id, post);\n    dispatch({\n      type: UPDATE,\n      payload: data,\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const deleteAdventurePost = (id) => async (dispatch) => {\n  try {\n    const { data } = await api.deleteAdventurePost(id);\n    dispatch({\n      type: DELETE,\n      payload: data,\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const likeAdventurePost = (id) => async (dispatch) => {\n  try {\n    const { data } = await api.likeAdventurePost(id);\n    dispatch({\n      type: UPDATE,\n      payload: data,\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"mappings":"AAAA,SACEA,MAAM,EACNC,MAAM,EACNC,MAAM,EACNC,OAAO,EACPC,OAAO,QACF,0BAA0B;AAEjC,OAAO,KAAKC,GAAG,MAAM,cAAc;AAEnC,OAAO,MAAMC,oBAAoB,GAAG,MAAM,MAAOC,QAAQ,IAAK;EAC5D,IAAI;IACF,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMH,GAAG,CAACC,oBAAoB,EAAE;IACjDG,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACjBD,QAAQ,CAAC;MACPI,IAAI,EAAER,OAAO;MACbS,OAAO,EAAEJ;IACX,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOK,KAAK,EAAE;IACdJ,OAAO,CAACC,GAAG,CAACG,KAAK,CAAC;EACpB;AACF,CAAC;AAED,OAAO,MAAMC,gBAAgB,GAAIC,EAAE,IAAK,MAAOR,QAAQ,IAAK;EAC1D,IAAI;IACF,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMH,GAAG,CAACS,gBAAgB,CAACC,EAAE,CAAC;IAC/CR,QAAQ,CAAC;MACPI,IAAI,EAAEP,OAAO;MACbQ,OAAO,EAAEJ;IACX,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOK,KAAK,EAAE;IACdJ,OAAO,CAACC,GAAG,CAACG,KAAK,CAAC;EACpB;AACF,CAAC;AAED,OAAO,MAAMG,mBAAmB,GAAIC,IAAI,IAAK,MAAOV,QAAQ,IAAK;EAC/D,IAAI;IACF,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMH,GAAG,CAACW,mBAAmB,CAACC,IAAI,CAAC;IACpDV,QAAQ,CAAC;MACPI,IAAI,EAAEX,MAAM;MACZY,OAAO,EAAEJ;IACX,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOK,KAAK,EAAE;IACdJ,OAAO,CAACC,GAAG,CAACG,KAAK,CAAC;EACpB;AACF,CAAC;AAED,OAAO,MAAMK,mBAAmB,GAAG,CAACH,EAAE,EAAEE,IAAI,KAAK,MAAOV,QAAQ,IAAK;EACnE,IAAI;IACF,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMH,GAAG,CAACa,mBAAmB,CAACH,EAAE,EAAEE,IAAI,CAAC;IACxDV,QAAQ,CAAC;MACPI,IAAI,EAAEV,MAAM;MACZW,OAAO,EAAEJ;IACX,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOK,KAAK,EAAE;IACdJ,OAAO,CAACC,GAAG,CAACG,KAAK,CAAC;EACpB;AACF,CAAC;AAED,OAAO,MAAMM,mBAAmB,GAAIJ,EAAE,IAAK,MAAOR,QAAQ,IAAK;EAC7D,IAAI;IACF,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMH,GAAG,CAACc,mBAAmB,CAACJ,EAAE,CAAC;IAClDR,QAAQ,CAAC;MACPI,IAAI,EAAET,MAAM;MACZU,OAAO,EAAEJ;IACX,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOK,KAAK,EAAE;IACdJ,OAAO,CAACC,GAAG,CAACG,KAAK,CAAC;EACpB;AACF,CAAC;AAED,OAAO,MAAMO,iBAAiB,GAAIL,EAAE,IAAK,MAAOR,QAAQ,IAAK;EAC3D,IAAI;IACF,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMH,GAAG,CAACe,iBAAiB,CAACL,EAAE,CAAC;IAChDR,QAAQ,CAAC;MACPI,IAAI,EAAEV,MAAM;MACZW,OAAO,EAAEJ;IACX,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOK,KAAK,EAAE;IACdJ,OAAO,CAACC,GAAG,CAACG,KAAK,CAAC;EACpB;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}