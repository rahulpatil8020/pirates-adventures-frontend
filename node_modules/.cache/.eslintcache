[{"/Users/rahulpatil/Desktop/react-applications/buddy/client/src/index.js":"1","/Users/rahulpatil/Desktop/react-applications/buddy/client/src/App.js":"2","/Users/rahulpatil/Desktop/react-applications/buddy/client/src/pages/Home/HomePage.js":"3","/Users/rahulpatil/Desktop/react-applications/buddy/client/src/pages/Feed/FeedPage.js":"4","/Users/rahulpatil/Desktop/react-applications/buddy/client/src/pages/Chat/ChatPage.js":"5","/Users/rahulpatil/Desktop/react-applications/buddy/client/src/pages/Profile/ProfilePage.js":"6","/Users/rahulpatil/Desktop/react-applications/buddy/client/src/pages/Auth/Auth.js":"7","/Users/rahulpatil/Desktop/react-applications/buddy/client/src/reducers/index.js":"8","/Users/rahulpatil/Desktop/react-applications/buddy/client/src/reducers/auth.js":"9","/Users/rahulpatil/Desktop/react-applications/buddy/client/src/constants/actionTypes.js":"10","/Users/rahulpatil/Desktop/react-applications/buddy/client/src/actions/auth.js":"11","/Users/rahulpatil/Desktop/react-applications/buddy/client/src/api/index.js":"12","/Users/rahulpatil/Desktop/react-applications/buddy/client/src/pages/Profile/styles.js":"13","/Users/rahulpatil/Desktop/react-applications/buddy/client/src/actions/adventurePosts.js":"14","/Users/rahulpatil/Desktop/react-applications/buddy/client/src/reducers/adventurePosts.js":"15","/Users/rahulpatil/Desktop/react-applications/buddy/client/src/pages/AddPost/AddPostPage.js":"16","/Users/rahulpatil/Desktop/react-applications/buddy/client/src/utils/PrivateRoutes.js":"17","/Users/rahulpatil/Desktop/react-applications/buddy/client/src/components/CreatePost.js":"18","/Users/rahulpatil/Desktop/react-applications/buddy/client/src/components/Input.js":"19","/Users/rahulpatil/Desktop/react-applications/buddy/client/src/actions/feedPost.js":"20","/Users/rahulpatil/Desktop/react-applications/buddy/client/src/reducers/feedPosts.js":"21","/Users/rahulpatil/Desktop/react-applications/buddy/client/src/components/Post.js":"22","/Users/rahulpatil/Desktop/react-applications/buddy/client/src/components/AppHeader.js":"23","/Users/rahulpatil/Desktop/react-applications/buddy/client/src/components/Navbar.js":"24","/Users/rahulpatil/Desktop/react-applications/buddy/client/src/components/PostCardSkeleton.js":"25","/Users/rahulpatil/Desktop/react-applications/buddy/client/src/reducers/apiKeys.js":"26","/Users/rahulpatil/Desktop/react-applications/buddy/client/src/actions/apiKeys.js":"27","/Users/rahulpatil/Desktop/react-applications/buddy/client/src/components/ConfirmationDialog.js":"28","/Users/rahulpatil/Desktop/react-applications/buddy/client/src/pages/PostDetails/FeedPostDetails.js":"29","/Users/rahulpatil/Desktop/react-applications/buddy/client/src/pages/PostDetails/AdventurePostDetails.js":"30","/Users/rahulpatil/Desktop/react-applications/buddy/client/src/components/PostDetailsSkeleton.js":"31","/Users/rahulpatil/Desktop/react-applications/buddy/client/src/reducers/chatRoom.js":"32","/Users/rahulpatil/Desktop/react-applications/buddy/client/src/actions/chatRoom.js":"33","/Users/rahulpatil/Desktop/react-applications/buddy/client/src/components/ChatRoomCard.js":"34","/Users/rahulpatil/Desktop/react-applications/buddy/client/src/components/ChatSpace.js":"35"},{"size":869,"mtime":1685573845262,"results":"36","hashOfConfig":"37"},{"size":2410,"mtime":1685567527373,"results":"38","hashOfConfig":"37"},{"size":1510,"mtime":1685573498540,"results":"39","hashOfConfig":"37"},{"size":1342,"mtime":1685050321107,"results":"40","hashOfConfig":"37"},{"size":7149,"mtime":1685568609956,"results":"41","hashOfConfig":"37"},{"size":426,"mtime":1685567948952,"results":"42","hashOfConfig":"37"},{"size":4077,"mtime":1684953202437,"results":"43","hashOfConfig":"37"},{"size":419,"mtime":1685481146731,"results":"44","hashOfConfig":"37"},{"size":688,"mtime":1685465943966,"results":"45","hashOfConfig":"37"},{"size":1222,"mtime":1685471763261,"results":"46","hashOfConfig":"37"},{"size":1139,"mtime":1685465868644,"results":"47","hashOfConfig":"37"},{"size":2640,"mtime":1685665199209,"results":"48","hashOfConfig":"37"},{"size":182,"mtime":1685554496876,"results":"49","hashOfConfig":"37"},{"size":2218,"mtime":1685035136403,"results":"50","hashOfConfig":"37"},{"size":1106,"mtime":1684969426423,"results":"51","hashOfConfig":"37"},{"size":3069,"mtime":1685466876765,"results":"52","hashOfConfig":"37"},{"size":409,"mtime":1685253061553,"results":"53","hashOfConfig":"37"},{"size":10889,"mtime":1684997701533,"results":"54","hashOfConfig":"37"},{"size":1327,"mtime":1684900492469,"results":"55","hashOfConfig":"37"},{"size":1755,"mtime":1684902182578,"results":"56","hashOfConfig":"37"},{"size":859,"mtime":1684861741542,"results":"57","hashOfConfig":"37"},{"size":6822,"mtime":1685466323149,"results":"58","hashOfConfig":"37"},{"size":2963,"mtime":1685665208390,"results":"59","hashOfConfig":"37"},{"size":2830,"mtime":1684895651874,"results":"60","hashOfConfig":"37"},{"size":1629,"mtime":1684858878186,"results":"61","hashOfConfig":"37"},{"size":321,"mtime":1684880927109,"results":"62","hashOfConfig":"37"},{"size":353,"mtime":1684881011312,"results":"63","hashOfConfig":"37"},{"size":893,"mtime":1684997319687,"results":"64","hashOfConfig":"37"},{"size":5520,"mtime":1685041429931,"results":"65","hashOfConfig":"37"},{"size":12239,"mtime":1685567857056,"results":"66","hashOfConfig":"37"},{"size":3091,"mtime":1685039352198,"results":"67","hashOfConfig":"37"},{"size":849,"mtime":1685559880968,"results":"68","hashOfConfig":"37"},{"size":2031,"mtime":1685506169011,"results":"69","hashOfConfig":"37"},{"size":1408,"mtime":1685504235724,"results":"70","hashOfConfig":"37"},{"size":2150,"mtime":1685554428760,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"k8c7l4",{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"79"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"79"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"79"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"79"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"79"},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"79"},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"79"},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"79"},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"79"},{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"79"},{"filePath":"174","messages":"175","suppressedMessages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"79"},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"181","messages":"182","suppressedMessages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"79"},{"filePath":"185","messages":"186","suppressedMessages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"188","messages":"189","suppressedMessages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},"/Users/rahulpatil/Desktop/react-applications/buddy/client/src/index.js",[],[],"/Users/rahulpatil/Desktop/react-applications/buddy/client/src/App.js",["191","192"],[],"import React, { useState, useEffect } from \"react\";\nimport HomePage from \"./pages/Home/HomePage\";\nimport AppHeader from \"./components/AppHeader\";\nimport FeedPage from \"./pages/Feed/FeedPage\";\nimport AddPostPage from \"./pages/AddPost/AddPostPage\";\nimport ChatPage from \"./pages/Chat/ChatPage\";\nimport Auth from \"./pages/Auth/Auth\";\nimport ProfilePage from \"./pages/Profile/ProfilePage\";\nimport Navbar from \"./components/Navbar\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport { createTheme, ThemeProvider } from \"@mui/material\";\nimport { useDispatch } from \"react-redux\";\nimport { getAllAdventurePosts } from \"./actions/adventurePosts\";\nimport PrivateRoutes from \"./utils/PrivateRoutes\";\nimport { getAllFeedPosts } from \"./actions/feedPost\";\nimport { getGoogleMapsAPIKey } from \"./actions/apiKeys\";\nimport { getAllChatRooms } from \"./actions/chatRoom\";\nimport AdventurePostDetails from \"./pages/PostDetails/AdventurePostDetails\";\nimport FeedPostDetails from \"./pages/PostDetails/FeedPostDetails\";\nimport { getUser } from \"./actions/auth\";\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: \"#6418c9\",\n    },\n    secondary: {\n      main: \"#7cc918\",\n    },\n  },\n});\nfunction App() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getAllAdventurePosts());\n    dispatch(getAllFeedPosts());\n    dispatch(getGoogleMapsAPIKey());\n    dispatch(getAllChatRooms());\n\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    if (user) {\n      dispatch(getUser(user?.user?._id));\n    }\n  }, []);\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <BrowserRouter>\n        <AppHeader />\n        <Routes>\n          <Route element={<PrivateRoutes />}>\n            <Route exact path=\"/\" element={<HomePage />} />\n            <Route path=\"/feed\" element={<FeedPage />} />\n            <Route path=\"/addPost\" element={<AddPostPage />} />\n            <Route path=\"/chat\" element={<ChatPage />} />\n            <Route path=\"/profile\" element={<ProfilePage />} />\n            <Route path=\"/adventure/:id\" element={<AdventurePostDetails />} />\n            <Route path=\"/feed/:id\" element={<FeedPostDetails />} />\n          </Route>\n          <Route path=\"/auth\" element={<Auth />} />\n        </Routes>\n        <Navbar />\n      </BrowserRouter>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n",[],"/Users/rahulpatil/Desktop/react-applications/buddy/client/src/pages/Home/HomePage.js",["193","194","195"],[],"/Users/rahulpatil/Desktop/react-applications/buddy/client/src/pages/Feed/FeedPage.js",["196"],[],"import React, { useState, useEffect } from \"react\";\nimport { Grid, Typography } from \"@mui/material\";\nimport { useSelector } from \"react-redux\";\nimport PostCardSkeleton from \"../../components/PostCardSkeleton\";\nimport Post from \"../../components/Post\";\nimport { likeFeedPost, deleteFeedPost } from \"../../actions/feedPost\";\nconst FeedPage = ({ setCurrentId }) => {\n  const posts = useSelector((state) => state.feedPostsReducer);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    if (posts.length) {\n      setLoading(false);\n    }\n  }, [posts]);\n  return (\n    <Grid\n      sx={{\n        display: \"flex\",\n        alignItems: \"center\",\n        padding: 2,\n        paddingX: 2,\n        paddingTop: 2,\n        paddingBottom: 20,\n      }}\n      container\n      alignItems=\"stretch\"\n      spacing={3}\n    >\n      {posts.map((post) =>\n        loading ? (\n          <Grid key={post._id} item xs={12} sm={6} md={4} lg={3} xl={2.4}>\n            <PostCardSkeleton />\n          </Grid>\n        ) : (\n          <Grid key={post._id} item xs={12} sm={6} md={4} lg={3} xl={2.4}>\n            <Post\n              post={post}\n              likePost={likeFeedPost}\n              deletePost={deleteFeedPost}\n              postType={\"feedPost\"}\n            />\n          </Grid>\n        )\n      )}\n    </Grid>\n  );\n};\n\nexport default FeedPage;\n","/Users/rahulpatil/Desktop/react-applications/buddy/client/src/pages/Chat/ChatPage.js",["197","198","199","200"],[],"import {\n  Container,\n  Paper,\n  Typography,\n  Box,\n  Divider,\n  TextField,\n  InputAdornment,\n  IconButton,\n  Skeleton,\n  Alert,\n} from \"@mui/material\";\nimport React, { useState, useEffect, useRef, useLayoutEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport ChatRoomCard from \"../../components/ChatRoomCard\";\nimport { useLocation, useSearchParams } from \"react-router-dom\";\nimport { useTheme } from \"@mui/styles\";\nimport { alpha } from \"@mui/material\";\nimport SendIcon from \"@mui/icons-material/Send\";\nimport { addChat, getAllChatRooms } from \"../../actions/chatRoom\";\n\nconst ChatPage = () => {\n  const dispatch = useDispatch();\n  const theme = useTheme();\n  const messageContainerRef = useRef(null);\n  const [searchParams] = useSearchParams();\n  const roomId = searchParams.get(\"roomid\");\n  const user = useSelector((state) => state.authReducer.authData);\n  const [activeChat, setActiveChat] = useState(roomId);\n  const chatRooms = useSelector((state) => state.chatRoomsReducer);\n  const [currentChatRoom, setCurrentChatRoom] = useState(null);\n\n  const [chatText, setChatText] = useState(\"\");\n\n  useEffect(() => {\n    if (messageContainerRef.current) {\n      messageContainerRef.current.scrollTop =\n        messageContainerRef.current.scrollHeight;\n    }\n    chatRooms?.map(\n      (chatRoom) => chatRoom?._id === roomId && setCurrentChatRoom(chatRoom)\n    );\n  }, [chatRooms]);\n  const handleAddChat = (e) => {\n    e.preventDefault();\n    dispatch(\n      addChat(currentChatRoom._id, {\n        chatText: chatText,\n        user: user._id,\n        userName: user.name,\n        date: new Date(),\n      })\n    );\n    setChatText(\"\");\n  };\n  return (\n    <Container\n      sx={{ paddingTop: 5, paddingBottom: 30, height: \"100vh\" }}\n      maxWidth=\"lg\"\n    >\n      <Typography variant=\"h5\" sx={{ fontWeight: 600 }}>\n        Chat Room\n      </Typography>\n      {!user || !chatRooms ? (\n        <Skeleton width={40} height={30} />\n      ) : (\n        <Paper\n          sx={{\n            height: \"100%\",\n            marginTop: \"20px\",\n            boxShadow:\n              \"0px 4px 8px 0px rgba(0, 0, 0, 0.2), 0px 6px 20px 0px rgba(0, 0, 0, 0.19)\",\n            borderRadius: \"15px\",\n            paddingY: \"20px\",\n            paddingX: \"10px\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <Box\n            sx={{\n              width: \"100%\",\n              height: \"100%\",\n              display: \"flex\",\n            }}\n          >\n            <Box\n              sx={{ display: \"flex\", flexDirection: \"column\", marginRight: 1 }}\n            >\n              <Divider></Divider>\n              {chatRooms.length > 0 &&\n                chatRooms?.map((chatRoom) => (\n                  <>\n                    <ChatRoomCard\n                      key={chatRoom._id}\n                      activeChat={activeChat}\n                      setActiveChat={setActiveChat}\n                      chatRoom={chatRoom}\n                      setCurrentChatRoom={setCurrentChatRoom}\n                    />\n                    <Divider></Divider>\n                  </>\n                ))}\n            </Box>\n            <Divider orientation=\"vertical\"></Divider>\n            <Box\n              sx={{\n                width: \"100%\",\n                display: \"flex\",\n                flexDirection: \"column\",\n              }}\n            >\n              <Box\n                sx={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  paddingX: 5,\n                  height: 60,\n                  backgroundColor: alpha(theme.palette.primary.main, 0.5),\n                }}\n              >\n                {currentChatRoom ? (\n                  <Typography variant=\"h6\">{currentChatRoom.name}</Typography>\n                ) : (\n                  <Typography variant=\"h6\">Chat Room</Typography>\n                )}\n              </Box>\n              {roomId && (\n                <Box\n                  sx={{\n                    display: \"flex\",\n                    flexDirection: \"column-reverse\",\n                    height: \"100%\",\n                    paddingY: 2,\n                    paddingX: 4,\n                  }}\n                >\n                  <TextField\n                    sx={{ marginTop: 2 }}\n                    autoComplete=\"off\"\n                    onKeyDown={(e) => {\n                      if (e.key === \"Enter\") {\n                        handleAddChat(e);\n                      }\n                    }}\n                    onChange={(e) => setChatText(e.target.value)}\n                    value={chatText}\n                    autoFocus\n                    id=\"input-with-icon-textfield\"\n                    label=\"Type a message\"\n                    variant=\"outlined\"\n                    InputProps={{\n                      endAdornment: (\n                        <InputAdornment position=\"end\">\n                          <IconButton onClick={handleAddChat}>\n                            <SendIcon />\n                          </IconButton>\n                        </InputAdornment>\n                      ),\n                    }}\n                  />\n                  <Box\n                    ref={messageContainerRef}\n                    sx={{\n                      overflowY: \"scroll\",\n                      display: \"flex\",\n                      flexDirection: \"column\",\n                    }}\n                  >\n                    {currentChatRoom?.chats\n                      ?.sort((a, b) => new Date(a.date) - new Date(b.date))\n                      .map((chat) => (\n                        <Box\n                          style={{\n                            alignSelf:\n                              chat?.user === user?._id\n                                ? \"flex-end\"\n                                : \"flex-start\",\n                            maxWidth: \"45%\",\n                            padding: \"2px 10px\",\n                            backgroundColor:\n                              chat?.user === user?._id\n                                ? theme.palette.primary.main\n                                : theme.palette.secondary.main,\n                            borderRadius: \"5px\",\n                            margin: \"5px 0\",\n                            color: \"white\",\n                          }}\n                        >\n                          <Typography\n                            sx={{\n                              fontSize: 10,\n                              color: \"grey\",\n                              fontWeight: 700,\n                            }}\n                          >\n                            {chat.userName}\n                          </Typography>\n                          <Typography>{chat.chatText}</Typography>\n                        </Box>\n                      ))}\n                  </Box>\n                </Box>\n              )}\n            </Box>\n          </Box>\n        </Paper>\n      )}\n      <Alert severity=\"info\" sx={{ margin: 5 }} variant=\"outlined\">\n        Live Chat Comming Soon...\n      </Alert>\n    </Container>\n  );\n};\n\nexport default ChatPage;\n","/Users/rahulpatil/Desktop/react-applications/buddy/client/src/pages/Profile/ProfilePage.js",["201","202","203","204"],[],"import React from \"react\";\nimport { Container, Avatar, Typography, Paper } from \"@mui/material\";\nimport { styles } from \"./styles\";\nimport ChatSpace from \"../../components/ChatSpace\";\nconst ProfilePage = () => {\n  const name = \"Rahul Patil\";\n  return (\n    <>\n      <Container component=\"main\" sx={styles.root}>\n        <Typography>Coming Soon.....</Typography>\n      </Container>\n    </>\n  );\n};\n\nexport default ProfilePage;\n","/Users/rahulpatil/Desktop/react-applications/buddy/client/src/pages/Auth/Auth.js",[],[],"/Users/rahulpatil/Desktop/react-applications/buddy/client/src/reducers/index.js",[],[],"/Users/rahulpatil/Desktop/react-applications/buddy/client/src/reducers/auth.js",[],[],"/Users/rahulpatil/Desktop/react-applications/buddy/client/src/constants/actionTypes.js",[],[],"/Users/rahulpatil/Desktop/react-applications/buddy/client/src/actions/auth.js",[],[],"/Users/rahulpatil/Desktop/react-applications/buddy/client/src/api/index.js",[],[],"/Users/rahulpatil/Desktop/react-applications/buddy/client/src/pages/Profile/styles.js",[],[],"/Users/rahulpatil/Desktop/react-applications/buddy/client/src/actions/adventurePosts.js",["205"],[],"import {\n  CREATE_ADVENTURE,\n  UPDATE_ADVENTURE,\n  DELETE_ADVENTURE,\n  GET_ALL_ADVENTURES,\n  GET_ONE_ADVENTURE,\n  LIKE_ADVENTURE,\n  ADD_ADVENTURE_PARTICIPANT,\n} from \"../constants/actionTypes\";\n\nimport * as api from \"../api/index\";\n\nexport const getAllAdventurePosts = () => async (dispatch) => {\n  try {\n    const { data } = await api.getAllAdventurePosts();\n    dispatch({\n      type: GET_ALL_ADVENTURES,\n      payload: data,\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// export const getAdventurePost = (id) => async (dispatch) => {\n//   try {\n//     const { data } = await api.getAdventurePost(id);\n//     dispatch({\n//       type: GET_ONE_ADVENTURE,\n//       payload: data,\n//     });\n//   } catch (error) {\n//     console.log(error);\n//   }\n// };\n\nexport const createAdventurePost = (post, navigate) => async (dispatch) => {\n  try {\n    const { data } = await api.createAdventurePost(post);\n    dispatch({\n      type: CREATE_ADVENTURE,\n      payload: data,\n    });\n    navigate(\"/\");\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const updateAdventurePost = (post, navigate) => async (dispatch) => {\n  try {\n    const { data } = await api.updateAdventurePost(post._id, post);\n    dispatch({\n      type: UPDATE_ADVENTURE,\n      payload: data,\n    });\n    navigate(\"/\");\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const deleteAdventurePost = (id) => async (dispatch) => {\n  try {\n    await api.deleteAdventurePost(id);\n    dispatch({\n      type: DELETE_ADVENTURE,\n      payload: id,\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const likeAdventurePost = (id, userId) => async (dispatch) => {\n  try {\n    const { data } = await api.likeAdventurePost(id, userId);\n    dispatch({\n      type: LIKE_ADVENTURE,\n      payload: data,\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const addAdventureParticipant =\n  (id, userId, userName, navigate) => async (dispatch) => {\n    try {\n      const { data } = await api.addAdventureParticipant(id, userId, userName);\n      dispatch({\n        type: ADD_ADVENTURE_PARTICIPANT,\n        payload: data,\n      });\n      navigate(`/`);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n","/Users/rahulpatil/Desktop/react-applications/buddy/client/src/reducers/adventurePosts.js",[],[],"/Users/rahulpatil/Desktop/react-applications/buddy/client/src/pages/AddPost/AddPostPage.js",["206","207"],[],"import { Container, Typography, Button, Stack, Alert } from \"@mui/material\";\nimport React, { useState, useEffect } from \"react\";\nimport CreatePost from \"../../components/CreatePost\";\nimport { useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useLocation } from \"react-router-dom\";\n\nconst AddPostPage = () => {\n  const user = useSelector((state) => state.authReducer?.authData);\n  const initialFormData = {\n    title: \"\",\n    tags: [],\n    details: \"\",\n    image: \"\",\n    createdBy: user?._id,\n    creatorName: user?.name,\n    location: \"\",\n    adventureParticipants: [{ userId: user?._id, userName: user?.name }],\n  };\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [formData, setFormData] = useState(initialFormData);\n  const [createType, setCreateType] = useState(location?.state?.type);\n  useEffect(() => {\n    setFormData(\n      location.state.postData ? location.state.postData : initialFormData\n    );\n  }, [user, location]);\n  return (\n    <Container sx={{ paddingTop: 5, paddingBottom: 20 }}>\n      {createType === \"feedPost\" && (\n        <>\n          {location.state.postData ? (\n            <Typography variant=\"h4\" sx={{ margin: 2 }}>\n              Update Post\n            </Typography>\n          ) : (\n            <Typography variant=\"h4\" sx={{ margin: 2 }}>\n              Create Post\n            </Typography>\n          )}\n          <CreatePost\n            postName=\"feedPost\"\n            postLabel=\"Feed Post Name\"\n            type=\"feedPost\"\n            formData={formData}\n            setFormData={setFormData}\n          />\n        </>\n      )}\n      {createType === \"adventurePost\" && (\n        <>\n          <Typography variant=\"h4\" sx={{ marginX: 2, marginY: 3 }}>\n            Create Adventure\n          </Typography>\n          <CreatePost\n            postName=\"adventurePost\"\n            postLabel=\"Adventure Post Name\"\n            type=\"adventurePost\"\n            formData={formData}\n            setFormData={setFormData}\n          />\n        </>\n      )}\n      {formData?.details?.split(\" \").length < 50 && (\n        <Alert sx={{ marginTop: 2 }} severity=\"info\">\n          The Details should be 50 words at least\n        </Alert>\n      )}\n      <div style={{ marginTop: 10 }}>\n        {createType === \"adventurePost\" && (\n          <Button\n            onClick={() => {\n              setFormData(initialFormData);\n              setCreateType(\"feedPost\");\n              navigate(\"/addPost\", { state: { type: \"feedPost\" } });\n            }}\n            variant=\"contained\"\n          >\n            Create Feed Post\n          </Button>\n        )}\n        {createType === \"feedPost\" && (\n          <Button\n            onClick={() => {\n              setFormData(initialFormData);\n              setCreateType(\"adventurePost\");\n              navigate(\"/addPost\", { state: { type: \"adventurePost\" } });\n            }}\n            variant=\"outlined\"\n          >\n            Create Adventure\n          </Button>\n        )}\n      </div>\n    </Container>\n  );\n};\n\nexport default AddPostPage;\n","/Users/rahulpatil/Desktop/react-applications/buddy/client/src/utils/PrivateRoutes.js",["208"],[],"import { Outlet, Navigate } from \"react-router-dom\";\nimport React, { useState } from \"react\";\nimport Navbar from \"../components/Navbar\";\nconst PrivateRoutes = ({ children, ...rest }) => {\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem(\"user\")));\n\n  return user ? (\n    <>\n      <Navbar />\n      <Outlet />\n    </>\n  ) : (\n    <Navigate to=\"/auth\" />\n  );\n};\n\nexport default PrivateRoutes;\n","/Users/rahulpatil/Desktop/react-applications/buddy/client/src/components/CreatePost.js",[],[],"/Users/rahulpatil/Desktop/react-applications/buddy/client/src/components/Input.js",[],[],"/Users/rahulpatil/Desktop/react-applications/buddy/client/src/actions/feedPost.js",["209"],[],"import {\n  CREATE_FEEDPOST,\n  UPDATE_FEEDPOST,\n  DELETE_FEEDPOST,\n  GET_ALL_FEEDPOST,\n  GET_ONE_FEEDPOST,\n  LIKE_FEEDPOST,\n} from \"../constants/actionTypes\";\n\nimport * as api from \"../api/index\";\n\nexport const getAllFeedPosts = () => async (dispatch) => {\n  try {\n    const { data } = await api.getAllFeedPosts();\n\n    dispatch({\n      type: GET_ALL_FEEDPOST,\n      payload: data,\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getFeedPost = (id) => async (dispatch) => {\n  try {\n    const { data } = await api.getFeedPost(id);\n    dispatch({\n      type: GET_ONE_FEEDPOST,\n      payload: data,\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const createFeedPost = (post, navigate) => async (dispatch) => {\n  try {\n    const { data } = await api.createFeedPost(post);\n    dispatch({\n      type: CREATE_FEEDPOST,\n      payload: data,\n    });\n    navigate(\"/feed\");\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const updateFeedPost = (post, navigate) => async (dispatch) => {\n  try {\n    const { data } = await api.updateFeedPost(post._id, post);\n    dispatch({\n      type: UPDATE_FEEDPOST,\n      payload: data,\n    });\n    navigate(\"/feed\");\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const deleteFeedPost = (id) => async (dispatch) => {\n  try {\n    const { data } = await api.deleteFeedPost(id);\n    dispatch({\n      type: DELETE_FEEDPOST,\n      payload: id,\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const likeFeedPost = (id, userId) => async (dispatch) => {\n  try {\n    const { data } = await api.likeFeedPost(id, userId);\n    dispatch({\n      type: LIKE_FEEDPOST,\n      payload: data,\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n","/Users/rahulpatil/Desktop/react-applications/buddy/client/src/reducers/feedPosts.js",[],[],"/Users/rahulpatil/Desktop/react-applications/buddy/client/src/components/Post.js",[],[],"/Users/rahulpatil/Desktop/react-applications/buddy/client/src/components/AppHeader.js",["210"],[],"/Users/rahulpatil/Desktop/react-applications/buddy/client/src/components/Navbar.js",[],[],"/Users/rahulpatil/Desktop/react-applications/buddy/client/src/components/PostCardSkeleton.js",[],[],"/Users/rahulpatil/Desktop/react-applications/buddy/client/src/reducers/apiKeys.js",[],[],"/Users/rahulpatil/Desktop/react-applications/buddy/client/src/actions/apiKeys.js",[],[],"/Users/rahulpatil/Desktop/react-applications/buddy/client/src/components/ConfirmationDialog.js",["211","212"],[],"import React, { useState, useEffect } from \"react\";\nimport {\n  Dialog,\n  DialogActions,\n  DialogTitle,\n  Slide,\n  Button,\n} from \"@mui/material\";\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\nconst ConfirmationDialog = ({ confirmSubmit, dialogOpen, setDialogOpen }) => {\n  const handleDialogClose = () => {\n    setDialogOpen(false);\n  };\n  return (\n    <Dialog\n      open={dialogOpen}\n      TransitionComponent={Transition}\n      keepMounted\n      onClose={handleDialogClose}\n      aria-describedby=\"alert-dialog-slide-description\"\n    >\n      <DialogTitle>{\"You sure about this?\"}</DialogTitle>\n      <DialogActions>\n        <Button onClick={handleDialogClose}>No</Button>\n        <Button onClick={confirmSubmit}>Yes</Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default ConfirmationDialog;\n","/Users/rahulpatil/Desktop/react-applications/buddy/client/src/pages/PostDetails/FeedPostDetails.js",["213"],[],"import React, { useState, useEffect } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport {\n  Paper,\n  Container,\n  Card,\n  CardMedia,\n  Grid,\n  Box,\n  Typography,\n} from \"@mui/material\";\nimport moment from \"moment\";\nimport { getFeedPost } from \"../../api\";\nimport PostDetailsSkeleton from \"../../components/PostDetailsSkeleton\";\n\nconst FeedPostDetails = () => {\n  const [postData, setPostData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const getOneFeedPost = async (postId) => {\n    const { data } = await getFeedPost(postId);\n    if (data) {\n      setLoading(false);\n    }\n    setPostData(data);\n  };\n  const [searchParams] = useSearchParams();\n  console.log();\n  useEffect(() => {\n    const postId = searchParams.get(\"id\");\n    if (!postData) {\n      getOneFeedPost(postId);\n    }\n  }, []);\n  return (\n    <>\n      <Container sx={{ marginBottom: 10 }} maxWidth={\"md\"}>\n        <Paper\n          sx={{\n            marginTop: \"20px\",\n            boxShadow:\n              \"0px 4px 8px 0px rgba(0, 0, 0, 0.2), 0px 6px 20px 0px rgba(0, 0, 0, 0.19)\",\n            borderRadius: \"15px\",\n            paddingY: \"20px\",\n            paddingX: \"10px\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          {!loading ? (\n            <Grid container spacing={4}>\n              <Grid item xs={12} md={6}>\n                <Card\n                  sx={{\n                    width: \"auto\",\n                    margin: \"auto\",\n                    borderRadius: \"15px\",\n                  }}\n                >\n                  <CardMedia\n                    sx={{\n                      height: 0,\n                      paddingTop: \"100%\",\n                      backgroundColor: \"rgba(0, 0, 0, 0.2)\",\n                      backgroundBlendMode: \"darken\",\n                    }}\n                    image={\n                      postData?.image ||\n                      \"https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png\"\n                    }\n                    title={postData?.title}\n                  />\n                </Card>\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <Box\n                  sx={{\n                    height: \"100%\",\n                    width: \"100%\",\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    alignItems: \"start\",\n                    justifyContent: \"center\",\n                    marginBottom: 2,\n                    marginTop: 2,\n                  }}\n                >\n                  <Box sx={{ marginTop: 1, display: \"flex\" }}>\n                    <Typography\n                      component={\"h6\"}\n                      variant={\"body1\"}\n                      sx={{ fontWeight: 600, whiteSpace: \"nowrap\" }}\n                    >\n                      Name :\n                    </Typography>\n                    <Typography sx={{ paddingLeft: 1, fontWeight: 500 }}>\n                      {` ${postData?.title}`}\n                    </Typography>\n                  </Box>\n                  <Box\n                    sx={{\n                      marginTop: 1,\n                      display: \"flex\",\n                    }}\n                  >\n                    <Typography sx={{ fontWeight: 600 }}>Creator :</Typography>\n                    <Typography sx={{ paddingLeft: 1 }} variant=\"body1\">\n                      {`${postData?.creatorName}`}\n                    </Typography>\n                  </Box>\n                  <Box\n                    sx={{\n                      marginTop: 1,\n                      display: \"flex\",\n                    }}\n                  >\n                    <Typography variant=\"body1\" sx={{ fontWeight: 600 }}>\n                      Created On :\n                    </Typography>\n                    <Typography\n                      sx={{ paddingLeft: 1 }}\n                      variant=\"body1\"\n                    >{`${moment(postData?.createdOn).format(\n                      \"YYYY-MM-DD\"\n                    )}`}</Typography>\n                  </Box>\n                  <Box\n                    sx={{\n                      marginTop: 1,\n                      display: \"flex\",\n                    }}\n                  >\n                    <Typography\n                      sx={{ fontWeight: 600, whiteSpace: \"nowrap\" }}\n                      variant=\"body1\"\n                    >{`Tags : `}</Typography>\n                    <Typography sx={{ paddingLeft: 1 }}>\n                      {postData?.tags?.join(\" \")}\n                    </Typography>\n                  </Box>\n                </Box>\n              </Grid>\n              <Grid item xs={12}>\n                <Box\n                  sx={{\n                    marginTop: 1,\n                    display: \"flex\",\n                  }}\n                >\n                  <Typography sx={{ whiteSpace: \"nowrap\", fontWeight: 600 }}>\n                    {`Details :`}\n                  </Typography>\n                  <Typography\n                    textAlign={\"justify\"}\n                    sx={{ paddingLeft: 1 }}\n                    variant=\"body1\"\n                  >\n                    {postData?.details}\n                  </Typography>\n                </Box>\n              </Grid>\n            </Grid>\n          ) : (\n            <PostDetailsSkeleton />\n          )}\n        </Paper>\n      </Container>\n    </>\n  );\n};\n\nexport default FeedPostDetails;\n","/Users/rahulpatil/Desktop/react-applications/buddy/client/src/pages/PostDetails/AdventurePostDetails.js",["214"],[],"import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport {\n  Paper,\n  Container,\n  Card,\n  CardMedia,\n  Grid,\n  Box,\n  Typography,\n  Divider,\n  Avatar,\n  CardActionArea,\n  CardContent,\n  Button,\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n} from \"@mui/material\";\nimport Input from \"../../components/Input\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport moment from \"moment\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport { addAdventureParticipant } from \"../../actions/adventurePosts\";\nimport ConfirmationDialog from \"../../components/ConfirmationDialog\";\nimport { getAdventurePost } from \"../../api\";\nimport { useSearchParams } from \"react-router-dom\";\nimport PostDetailsSkeleton from \"../../components/PostDetailsSkeleton\";\nimport { addUserAdventure } from \"../../actions/auth\";\nimport { createChatRoom } from \"../../actions/chatRoom\";\n\nconst AdventurePostDetails = () => {\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const user = useSelector((state) => state.authReducer?.authData);\n  const [postData, setPostData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [chatRoomName, setChatRoomName] = useState(\"\");\n  const handleParticipate = (e) => {\n    if (user?._id === postData?.createdBy) return;\n    setDialogOpen(true);\n  };\n\n  const handleCreateChatRoom = (e) => {\n    dispatch(\n      createChatRoom({ name: chatRoomName, adventure: postData._id }, navigate)\n    );\n  };\n\n  const confirmParticipate = () => {\n    dispatch(addUserAdventure(user?._id, postData._id));\n    dispatch(\n      addAdventureParticipant(postData._id, user?._id, user?.name, navigate)\n    );\n  };\n\n  const getOneAdventurePost = async (postId) => {\n    const { data } = await getAdventurePost(postId);\n    if (data) {\n      setLoading(false);\n    }\n    setPostData(data);\n  };\n\n  const [searchParams] = useSearchParams();\n  useEffect(() => {\n    const postId = searchParams.get(\"id\");\n    if (!postData) {\n      getOneAdventurePost(postId);\n    }\n  }, []);\n  return (\n    <>\n      <ConfirmationDialog\n        dialogOpen={dialogOpen}\n        setDialogOpen={setDialogOpen}\n        confirmSubmit={confirmParticipate}\n      />\n\n      <Container sx={{ marginBottom: 10 }} maxWidth={\"md\"}>\n        <Paper\n          sx={{\n            marginTop: \"20px\",\n            boxShadow:\n              \"0px 4px 8px 0px rgba(0, 0, 0, 0.2), 0px 6px 20px 0px rgba(0, 0, 0, 0.19)\",\n            borderRadius: \"15px\",\n            paddingY: \"20px\",\n            paddingX: \"10px\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          {!loading ? (\n            <Grid container spacing={4}>\n              <Grid item xs={12} md={6}>\n                <Card\n                  sx={{\n                    width: \"auto\",\n                    margin: \"auto\",\n                    borderRadius: \"15px\",\n                  }}\n                >\n                  <CardMedia\n                    sx={{\n                      height: 0,\n                      paddingTop: \"100%\",\n                      backgroundColor: \"rgba(0, 0, 0, 0.2)\",\n                      backgroundBlendMode: \"darken\",\n                    }}\n                    image={\n                      postData?.image ||\n                      \"https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png\"\n                    }\n                    title={postData?.title}\n                  />\n                </Card>\n              </Grid>\n              <Grid item xs={12} md={6}>\n                <Box\n                  sx={{\n                    height: \"100%\",\n                    width: \"100%\",\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    alignItems: \"start\",\n                    justifyContent: \"center\",\n                    marginBottom: 2,\n                    marginTop: 2,\n                  }}\n                >\n                  <Box sx={{ marginTop: 1, display: \"flex\" }}>\n                    <Typography\n                      component={\"h6\"}\n                      variant={\"body1\"}\n                      sx={{ fontWeight: 600, whiteSpace: \"nowrap\" }}\n                    >\n                      Name :\n                    </Typography>\n                    <Typography sx={{ paddingLeft: 1, fontWeight: 500 }}>\n                      {` ${postData?.title}`}\n                    </Typography>\n                  </Box>\n                  <Box\n                    sx={{\n                      marginTop: 1,\n                      display: \"flex\",\n                    }}\n                  >\n                    <Typography sx={{ fontWeight: 600 }}>Creator :</Typography>\n                    <Typography sx={{ paddingLeft: 1 }} variant=\"body1\">\n                      {`${postData?.creatorName}`}\n                    </Typography>\n                  </Box>\n                  <Box\n                    sx={{\n                      marginTop: 1,\n                      display: \"flex\",\n                    }}\n                  >\n                    <Typography variant=\"body1\" sx={{ fontWeight: 600 }}>\n                      Created On :\n                    </Typography>\n                    <Typography\n                      sx={{ paddingLeft: 1 }}\n                      variant=\"body1\"\n                    >{`${moment(postData?.createdOn).format(\n                      \"YYYY-MM-DD\"\n                    )}`}</Typography>\n                  </Box>\n                  <Box\n                    sx={{\n                      marginTop: 1,\n                      display: \"flex\",\n                    }}\n                  >\n                    <Typography\n                      sx={{ fontWeight: 600, whiteSpace: \"nowrap\" }}\n                      variant=\"body1\"\n                    >{`Tags : `}</Typography>\n                    <Typography sx={{ paddingLeft: 1 }}>\n                      {postData?.tags?.join(\" \")}\n                    </Typography>\n                  </Box>\n                  <Box\n                    sx={{\n                      marginTop: 1,\n                      display: \"flex\",\n                    }}\n                  >\n                    <Typography sx={{ whiteSpace: \"nowrap\", fontWeight: 600 }}>\n                      {`Location :`}\n                    </Typography>\n                    <Typography sx={{ paddingLeft: 1 }} variant=\"body1\">\n                      {postData?.location}\n                    </Typography>\n                  </Box>\n                </Box>\n              </Grid>\n              <Grid item xs={12}>\n                <Box\n                  sx={{\n                    marginTop: 1,\n                    display: \"flex\",\n                  }}\n                >\n                  <Typography sx={{ whiteSpace: \"nowrap\", fontWeight: 600 }}>\n                    {`Details :`}\n                  </Typography>\n                  <Typography\n                    textAlign={\"justify\"}\n                    sx={{ paddingLeft: 1 }}\n                    variant=\"body1\"\n                  >\n                    {postData?.details}\n                  </Typography>\n                </Box>\n\n                {postData?.adventureParticipants?.some(\n                  (adventureParticipant) =>\n                    adventureParticipant.userId === user?._id\n                ) ? (\n                  <Box\n                    sx={{\n                      padding: 2,\n                      display: \"flex\",\n                      alignItems: \"center\",\n                      justifyContent: \"end\",\n                    }}\n                  >\n                    <Button onClick={handleParticipate} variant=\"contained\">\n                      Cancle Participation\n                    </Button>\n                  </Box>\n                ) : (\n                  <Box\n                    sx={{\n                      padding: 2,\n                      display: \"flex\",\n                      alignItems: \"center\",\n                      justifyContent: \"end\",\n                    }}\n                  >\n                    <Button onClick={handleParticipate} variant=\"contained\">\n                      Participate\n                    </Button>\n                  </Box>\n                )}\n                {user?._id === postData?.createdBy && (\n                  <Accordion>\n                    <AccordionSummary\n                      expandIcon={<ExpandMoreIcon />}\n                      aria-controls=\"panel1a-content\"\n                      id=\"panel1a-header\"\n                    >\n                      <Typography>Create Chat Room</Typography>\n                    </AccordionSummary>\n                    <AccordionDetails>\n                      <Grid container spacing={3}>\n                        <Input\n                          name={\"name\"}\n                          handleChange={(e) => {\n                            setChatRoomName(e.target.value);\n                          }}\n                          label={\"Chat Room Name\"}\n                          type=\"text\"\n                          autoComplete=\"off\"\n                          half\n                          value={chatRoomName}\n                        />\n                        <Grid\n                          item\n                          xs={6}\n                          sx={{\n                            display: \"flex\",\n                            alignItems: \"center\",\n                          }}\n                        >\n                          <Button\n                            variant={\"contained\"}\n                            onClick={handleCreateChatRoom}\n                          >\n                            Create Chat Room\n                          </Button>\n                        </Grid>\n                      </Grid>\n                    </AccordionDetails>\n                  </Accordion>\n                )}\n                <Divider textAlign=\"left\" sx={{ color: \"black\", marginTop: 2 }}>\n                  <Typography variant=\"h6\">\n                    {postData?.adventureParticipantsCount} Participant(s)\n                  </Typography>\n                </Divider>\n              </Grid>\n\n              {postData?.adventureParticipants.map((user) => (\n                <Grid item xs={12} md={6}>\n                  <Card\n                    sx={{\n                      width: \"100%\",\n                    }}\n                  >\n                    <CardActionArea>\n                      <CardContent\n                        sx={{\n                          marginX: 1,\n                        }}\n                        onClick={() => console.log(\"Clicked\")}\n                      >\n                        <Box\n                          sx={{\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            overflow: \"hidden\",\n                          }}\n                        >\n                          <Avatar>\n                            {user.userName.split(\" \")[0][0]}\n                            {user.userName.split(\" \")[1][0]}\n                          </Avatar>\n                          <Box\n                            sx={{\n                              marginLeft: 1,\n                              display: \"block\",\n                              overflow: \"hidden\",\n                            }}\n                          >\n                            <Typography noWrap variant={\"h6\"}>\n                              {user?.userName}\n                            </Typography>\n                            <Typography noWrap>\n                              {user?.userId === postData?.createdBy\n                                ? \"creator\"\n                                : \"participant\"}\n                            </Typography>\n                          </Box>\n                        </Box>\n                      </CardContent>\n                    </CardActionArea>\n                  </Card>\n                </Grid>\n              ))}\n            </Grid>\n          ) : (\n            <PostDetailsSkeleton />\n          )}\n        </Paper>\n      </Container>\n    </>\n  );\n};\n\nexport default AdventurePostDetails;\n","/Users/rahulpatil/Desktop/react-applications/buddy/client/src/components/PostDetailsSkeleton.js",["215"],[],"import React from \"react\";\nimport { Card, Typography, Box, Grid, Divider, Skeleton } from \"@mui/material\";\nconst PostDetailsSkeleton = () => {\n  return (\n    <Grid container spacing={4}>\n      <Grid item xs={12} md={6}>\n        <Card\n          sx={{\n            width: \"auto\",\n            margin: \"auto\",\n            borderRadius: \"15px\",\n          }}\n        >\n          <Skeleton\n            sx={{ height: 350 }}\n            animation=\"wave\"\n            variant=\"rectangular\"\n          />\n        </Card>\n      </Grid>\n      <Grid item xs={12} md={6}>\n        <Box\n          sx={{\n            height: \"100%\",\n            width: \"100%\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"start\",\n            justifyContent: \"center\",\n            marginBottom: 2,\n            marginTop: 2,\n          }}\n        >\n          <Skeleton\n            animation=\"wave\"\n            style={{ marginTop: 3, marginBottom: 10, marginLeft: 4 }}\n            height={20}\n            width=\"50%\"\n          />\n          <Skeleton\n            animation=\"wave\"\n            style={{ marginTop: 3, marginBottom: 10, marginLeft: 4 }}\n            height={20}\n            width=\"50%\"\n          />\n          <Skeleton\n            animation=\"wave\"\n            style={{ marginTop: 3, marginBottom: 10, marginLeft: 4 }}\n            height={20}\n            width=\"50%\"\n          />\n          <Skeleton\n            animation=\"wave\"\n            style={{ marginTop: 3, marginBottom: 10, marginLeft: 4 }}\n            height={20}\n            width=\"50%\"\n          />\n          <Skeleton\n            animation=\"wave\"\n            style={{ marginTop: 3, marginBottom: 10, marginLeft: 4 }}\n            height={20}\n            width=\"50%\"\n          />\n        </Box>\n      </Grid>\n      <Grid item xs={12}>\n        <Skeleton\n          animation=\"wave\"\n          style={{ marginTop: 1, marginBottom: 2, marginLeft: 4 }}\n          height={20}\n          width=\"90%\"\n        />\n        <Skeleton\n          animation=\"wave\"\n          style={{ marginTop: 1, marginBottom: 2, marginLeft: 4 }}\n          height={20}\n          width=\"90%\"\n        />\n        <Skeleton\n          animation=\"wave\"\n          style={{ marginTop: 1, marginBottom: 2, marginLeft: 4 }}\n          height={20}\n          width=\"90%\"\n        />\n        <Skeleton\n          animation=\"wave\"\n          style={{ marginTop: 1, marginBottom: 2, marginLeft: 4 }}\n          height={20}\n          width=\"90%\"\n        />\n        <Divider\n          textAlign=\"left\"\n          sx={{ color: \"black\", marginTop: 2 }}\n        ></Divider>\n      </Grid>\n      <Grid item xs={12} md={6}>\n        <Skeleton\n          animation=\"wave\"\n          style={{ marginTop: 1, marginBottom: 2, marginLeft: 4 }}\n          height={130}\n          width=\"100%\"\n        />\n      </Grid>\n      <Grid item xs={12} md={6}>\n        <Skeleton\n          animation=\"wave\"\n          style={{ marginTop: 1, marginBottom: 2, marginLeft: 4 }}\n          height={130}\n          width=\"100%\"\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default PostDetailsSkeleton;\n","/Users/rahulpatil/Desktop/react-applications/buddy/client/src/reducers/chatRoom.js",[],[],"/Users/rahulpatil/Desktop/react-applications/buddy/client/src/actions/chatRoom.js",["216","217"],[],"import {\n  GET_CHATROOM,\n  CREATE_CHATROOM,\n  ADD_CHAT,\n  UPDATE_CHATROOM,\n  DELETE_CHATROOM,\n  GET_ALL_CHATROOMS,\n  DELETE_CHAT,\n} from \"../constants/actionTypes\";\n\nimport * as api from \"../api/index\";\nimport { Navigate } from \"react-router-dom\";\n\nexport const getAllChatRooms = () => async (dispatch) => {\n  try {\n    const { data } = await api.getAllChatRooms();\n    dispatch({\n      type: GET_ALL_CHATROOMS,\n      payload: data,\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getChatRoom = (id) => async (dispatch) => {\n  try {\n    const { data } = await api.getChatRoom(id);\n    dispatch({\n      type: GET_CHATROOM,\n      payload: data,\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const createChatRoom = (formData, navigate) => async (dispatch) => {\n  try {\n    console.log(\"hello\");\n    const { data } = await api.createChatRoom(formData);\n    dispatch({\n      type: CREATE_CHATROOM,\n      payload: data,\n    });\n    navigate(\"/\");\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const updateChatRoom = (data) => async (dispatch) => {\n  try {\n    const { data } = await api.updateChatRoom(data);\n    dispatch({\n      type: UPDATE_CHATROOM,\n      payload: data,\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const deleteChatRoom = (id) => async (dispatch) => {\n  try {\n    await api.deleteAdventurePost(id);\n    dispatch({\n      type: DELETE_CHATROOM,\n      payload: id,\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const addChat = (id, chat) => async (dispatch) => {\n  try {\n    const { data } = await api.addChat(id, chat);\n    console.log(data);\n    dispatch({\n      type: ADD_CHAT,\n      payload: data,\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const deleteChat = (id, chat) => async (dispatch) => {\n  try {\n    const { data } = await api.deleteChat(id, chat);\n    dispatch({\n      type: DELETE_CHAT,\n      payload: data,\n    });\n  } catch (error) {\n    console.log(console.log(error));\n  }\n};\n","/Users/rahulpatil/Desktop/react-applications/buddy/client/src/components/ChatRoomCard.js",[],[],"/Users/rahulpatil/Desktop/react-applications/buddy/client/src/components/ChatSpace.js",[],[],{"ruleId":"218","severity":1,"message":"219","line":1,"column":17,"nodeType":"220","messageId":"221","endLine":1,"endColumn":25},{"ruleId":"222","severity":1,"message":"223","line":44,"column":6,"nodeType":"224","endLine":44,"endColumn":8,"suggestions":"225"},{"ruleId":"218","severity":1,"message":"226","line":2,"column":16,"nodeType":"220","messageId":"221","endLine":2,"endColumn":21},{"ruleId":"218","severity":1,"message":"227","line":2,"column":23,"nodeType":"220","messageId":"221","endLine":2,"endColumn":31},{"ruleId":"218","severity":1,"message":"228","line":2,"column":33,"nodeType":"220","messageId":"221","endLine":2,"endColumn":43},{"ruleId":"218","severity":1,"message":"228","line":2,"column":16,"nodeType":"220","messageId":"221","endLine":2,"endColumn":26},{"ruleId":"218","severity":1,"message":"229","line":13,"column":46,"nodeType":"220","messageId":"221","endLine":13,"endColumn":61},{"ruleId":"218","severity":1,"message":"230","line":16,"column":10,"nodeType":"220","messageId":"221","endLine":16,"endColumn":21},{"ruleId":"218","severity":1,"message":"231","line":20,"column":19,"nodeType":"220","messageId":"221","endLine":20,"endColumn":34},{"ruleId":"222","severity":1,"message":"232","line":43,"column":6,"nodeType":"224","endLine":43,"endColumn":17,"suggestions":"233"},{"ruleId":"218","severity":1,"message":"234","line":2,"column":21,"nodeType":"220","messageId":"221","endLine":2,"endColumn":27},{"ruleId":"218","severity":1,"message":"235","line":2,"column":41,"nodeType":"220","messageId":"221","endLine":2,"endColumn":46},{"ruleId":"218","severity":1,"message":"236","line":4,"column":8,"nodeType":"220","messageId":"221","endLine":4,"endColumn":17},{"ruleId":"218","severity":1,"message":"237","line":6,"column":9,"nodeType":"220","messageId":"221","endLine":6,"endColumn":13},{"ruleId":"218","severity":1,"message":"238","line":6,"column":3,"nodeType":"220","messageId":"221","endLine":6,"endColumn":20},{"ruleId":"218","severity":1,"message":"226","line":1,"column":41,"nodeType":"220","messageId":"221","endLine":1,"endColumn":46},{"ruleId":"222","severity":1,"message":"239","line":28,"column":6,"nodeType":"224","endLine":28,"endColumn":22,"suggestions":"240"},{"ruleId":"218","severity":1,"message":"241","line":5,"column":16,"nodeType":"220","messageId":"221","endLine":5,"endColumn":23},{"ruleId":"218","severity":1,"message":"242","line":65,"column":13,"nodeType":"220","messageId":"221","endLine":65,"endColumn":17},{"ruleId":"218","severity":1,"message":"243","line":26,"column":9,"nodeType":"220","messageId":"221","endLine":26,"endColumn":17},{"ruleId":"218","severity":1,"message":"219","line":1,"column":17,"nodeType":"220","messageId":"221","endLine":1,"endColumn":25},{"ruleId":"218","severity":1,"message":"244","line":1,"column":27,"nodeType":"220","messageId":"221","endLine":1,"endColumn":36},{"ruleId":"222","severity":1,"message":"245","line":33,"column":6,"nodeType":"224","endLine":33,"endColumn":8,"suggestions":"246"},{"ruleId":"222","severity":1,"message":"245","line":72,"column":6,"nodeType":"224","endLine":72,"endColumn":8,"suggestions":"247"},{"ruleId":"218","severity":1,"message":"228","line":2,"column":16,"nodeType":"220","messageId":"221","endLine":2,"endColumn":26},{"ruleId":"218","severity":1,"message":"248","line":12,"column":10,"nodeType":"220","messageId":"221","endLine":12,"endColumn":18},{"ruleId":"249","severity":1,"message":"250","line":54,"column":47,"nodeType":"220","messageId":"251","endLine":54,"endColumn":51},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["252"],"'Stack' is defined but never used.","'Skeleton' is defined but never used.","'Typography' is defined but never used.","'useLayoutEffect' is defined but never used.","'useLocation' is defined but never used.","'getAllChatRooms' is defined but never used.","React Hook useEffect has a missing dependency: 'roomId'. Either include it or remove the dependency array.",["253"],"'Avatar' is defined but never used.","'Paper' is defined but never used.","'ChatSpace' is defined but never used.","'name' is assigned a value but never used.","'GET_ONE_ADVENTURE' is defined but never used.","React Hook useEffect has a missing dependency: 'initialFormData'. Either include it or remove the dependency array.",["254"],"'setUser' is assigned a value but never used.","'data' is assigned a value but never used.","'location' is assigned a value but never used.","'useEffect' is defined but never used.","React Hook useEffect has missing dependencies: 'postData' and 'searchParams'. Either include them or remove the dependency array.",["255"],["256"],"'Navigate' is defined but never used.","no-use-before-define","'data' was used before it was defined.","usedBeforeDefined",{"desc":"257","fix":"258"},{"desc":"259","fix":"260"},{"desc":"261","fix":"262"},{"desc":"263","fix":"264"},{"desc":"263","fix":"265"},"Update the dependencies array to be: [dispatch]",{"range":"266","text":"267"},"Update the dependencies array to be: [chatRooms, roomId]",{"range":"268","text":"269"},"Update the dependencies array to be: [user, location, initialFormData]",{"range":"270","text":"271"},"Update the dependencies array to be: [postData, searchParams]",{"range":"272","text":"273"},{"range":"274","text":"273"},[1599,1601],"[dispatch]",[1400,1411],"[chatRooms, roomId]",[983,999],"[user, location, initialFormData]",[836,838],"[postData, searchParams]",[2136,2138]]