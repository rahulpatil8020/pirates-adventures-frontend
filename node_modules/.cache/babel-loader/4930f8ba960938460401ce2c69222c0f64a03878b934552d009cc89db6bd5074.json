{"ast":null,"code":"var _jsxFileName = \"/Users/rahulpatil/Desktop/react-applications/buddy/client/src/pages/Chat/ChatPage.js\",\n  _s = $RefreshSig$();\nimport { Container, Paper, Typography, Box, Divider, TextField, InputAdornment, IconButton } from \"@mui/material\";\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport ChatRoomCard from \"../../components/ChatRoomCard\";\nimport { useLocation, useSearchParams } from \"react-router-dom\";\nimport { useTheme } from \"@mui/styles\";\nimport { alpha } from \"@mui/material\";\nimport SendIcon from \"@mui/icons-material/Send\";\nimport { addChat, getAllChatRooms } from \"../../actions/chatRoom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChatPage = () => {\n  _s();\n  var _currentChatRoom$chat;\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const theme = useTheme();\n  const [searchParams] = useSearchParams();\n  const roomId = searchParams.get(\"roomid\");\n  const user = useSelector(state => state.authReducer.authData);\n  const [activeChat, setActiveChat] = useState(roomId);\n  const chatRooms = useSelector(state => state.chatRoomsReducer);\n  const [currentChatRoom, setCurrentChatRoom] = useState(null);\n  const [chatText, setChatText] = useState(\"\");\n  useEffect(() => {\n    dispatch(getAllChatRooms());\n    chatRooms.map(chatRoom => chatRoom._id === roomId && setCurrentChatRoom(chatRoom));\n  }, []);\n  const handleAddChat = e => {\n    console.log(chatText);\n    // dispatch(\n    //   addChat(currentChatRoom._id, {\n    //     chatText: e.target.value,\n    //   })\n    // );\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    sx: {\n      paddingTop: 5,\n      paddingBottom: 25,\n      height: \"100vh\"\n    },\n    maxWidth: \"lg\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      sx: {\n        fontWeight: 600\n      },\n      children: \"Chat Room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        height: \"100%\",\n        marginTop: \"20px\",\n        boxShadow: \"0px 4px 8px 0px rgba(0, 0, 0, 0.2), 0px 6px 20px 0px rgba(0, 0, 0, 0.19)\",\n        borderRadius: \"15px\",\n        paddingY: \"20px\",\n        paddingX: \"10px\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          width: \"100%\",\n          height: \"100%\",\n          display: \"flex\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: \"flex\",\n            flexDirection: \"column\",\n            marginRight: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), chatRooms.map(chatRoom => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(ChatRoomCard, {\n              activeChat: activeChat,\n              setActiveChat: setActiveChat,\n              chatRoom: chatRoom,\n              setCurrentChatRoom: setCurrentChatRoom\n            }, chatRoom._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          orientation: \"vertical\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            width: \"100%\",\n            display: \"flex\",\n            flexDirection: \"column\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: \"flex\",\n              alignItems: \"center\",\n              paddingX: 5,\n              height: 60,\n              backgroundColor: alpha(theme.palette.primary.main, 0.5)\n            },\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: \"Chat Room For \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), roomId && /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: \"flex\",\n              flexDirection: \"column-reverse\",\n              height: \"100%\",\n              paddingY: 2,\n              paddingX: 4\n            },\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              onChange: e => setChatText(e.target.value),\n              value: chatText,\n              autoFocus: true,\n              id: \"input-with-icon-textfield\",\n              label: \"Type a message\",\n              variant: \"outlined\",\n              InputProps: {\n                endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                  position: \"end\",\n                  children: /*#__PURE__*/_jsxDEV(IconButton, {\n                    onClick: handleAddChat,\n                    children: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 133,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 132,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 23\n                }, this)\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 17\n            }, this), currentChatRoom === null || currentChatRoom === void 0 ? void 0 : (_currentChatRoom$chat = currentChatRoom.chats) === null || _currentChatRoom$chat === void 0 ? void 0 : _currentChatRoom$chat.map(chat => /*#__PURE__*/_jsxDEV(Typography, {\n              sx: {\n                alignSelf: chat.userId === user._id ? \"flex-end\" : \"flex-start\"\n              },\n              children: chat.chatText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatPage, \"5UrrwM1mnA+y3uzQ++fxsozdJRE=\", false, function () {\n  return [useLocation, useDispatch, useTheme, useSearchParams, useSelector, useSelector];\n});\n_c = ChatPage;\nexport default ChatPage;\nvar _c;\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"names":["Container","Paper","Typography","Box","Divider","TextField","InputAdornment","IconButton","React","useState","useEffect","useSelector","useDispatch","ChatRoomCard","useLocation","useSearchParams","useTheme","alpha","SendIcon","addChat","getAllChatRooms","ChatPage","location","dispatch","theme","searchParams","roomId","get","user","state","authReducer","authData","activeChat","setActiveChat","chatRooms","chatRoomsReducer","currentChatRoom","setCurrentChatRoom","chatText","setChatText","map","chatRoom","_id","handleAddChat","e","console","log","paddingTop","paddingBottom","height","fontWeight","marginTop","boxShadow","borderRadius","paddingY","paddingX","display","flexDirection","alignItems","width","marginRight","backgroundColor","palette","primary","main","target","value","endAdornment","chats","chat","alignSelf","userId"],"sources":["/Users/rahulpatil/Desktop/react-applications/buddy/client/src/pages/Chat/ChatPage.js"],"sourcesContent":["import {\n  Container,\n  Paper,\n  Typography,\n  Box,\n  Divider,\n  TextField,\n  InputAdornment,\n  IconButton,\n} from \"@mui/material\";\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport ChatRoomCard from \"../../components/ChatRoomCard\";\nimport { useLocation, useSearchParams } from \"react-router-dom\";\nimport { useTheme } from \"@mui/styles\";\nimport { alpha } from \"@mui/material\";\nimport SendIcon from \"@mui/icons-material/Send\";\nimport { addChat, getAllChatRooms } from \"../../actions/chatRoom\";\n\nconst ChatPage = () => {\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const theme = useTheme();\n  const [searchParams] = useSearchParams();\n  const roomId = searchParams.get(\"roomid\");\n  const user = useSelector((state) => state.authReducer.authData);\n  const [activeChat, setActiveChat] = useState(roomId);\n  const chatRooms = useSelector((state) => state.chatRoomsReducer);\n  const [currentChatRoom, setCurrentChatRoom] = useState(null);\n\n  const [chatText, setChatText] = useState(\"\");\n  useEffect(() => {\n    dispatch(getAllChatRooms());\n    chatRooms.map(\n      (chatRoom) => chatRoom._id === roomId && setCurrentChatRoom(chatRoom)\n    );\n  }, []);\n\n  const handleAddChat = (e) => {\n    console.log(chatText);\n    // dispatch(\n    //   addChat(currentChatRoom._id, {\n    //     chatText: e.target.value,\n    //   })\n    // );\n  };\n  return (\n    <Container\n      sx={{ paddingTop: 5, paddingBottom: 25, height: \"100vh\" }}\n      maxWidth=\"lg\"\n    >\n      <Typography variant=\"h5\" sx={{ fontWeight: 600 }}>\n        Chat Room\n      </Typography>\n      <Paper\n        sx={{\n          height: \"100%\",\n          marginTop: \"20px\",\n          boxShadow:\n            \"0px 4px 8px 0px rgba(0, 0, 0, 0.2), 0px 6px 20px 0px rgba(0, 0, 0, 0.19)\",\n          borderRadius: \"15px\",\n          paddingY: \"20px\",\n          paddingX: \"10px\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n        }}\n      >\n        <Box\n          sx={{\n            width: \"100%\",\n            height: \"100%\",\n            display: \"flex\",\n          }}\n        >\n          <Box\n            sx={{ display: \"flex\", flexDirection: \"column\", marginRight: 1 }}\n          >\n            <Divider></Divider>\n            {chatRooms.map((chatRoom) => (\n              <>\n                <ChatRoomCard\n                  key={chatRoom._id}\n                  activeChat={activeChat}\n                  setActiveChat={setActiveChat}\n                  chatRoom={chatRoom}\n                  setCurrentChatRoom={setCurrentChatRoom}\n                />\n                <Divider></Divider>\n              </>\n            ))}\n          </Box>\n          <Divider orientation=\"vertical\"></Divider>\n          <Box\n            sx={{\n              width: \"100%\",\n              display: \"flex\",\n              flexDirection: \"column\",\n            }}\n          >\n            <Box\n              sx={{\n                display: \"flex\",\n                alignItems: \"center\",\n                paddingX: 5,\n                height: 60,\n                backgroundColor: alpha(theme.palette.primary.main, 0.5),\n              }}\n            >\n              <Typography variant=\"h6\">Chat Room For </Typography>\n            </Box>\n            {roomId && (\n              <Box\n                sx={{\n                  display: \"flex\",\n                  flexDirection: \"column-reverse\",\n                  height: \"100%\",\n                  paddingY: 2,\n                  paddingX: 4,\n                }}\n              >\n                <TextField\n                  onChange={(e) => setChatText(e.target.value)}\n                  value={chatText}\n                  autoFocus\n                  id=\"input-with-icon-textfield\"\n                  label=\"Type a message\"\n                  variant=\"outlined\"\n                  InputProps={{\n                    endAdornment: (\n                      <InputAdornment position=\"end\">\n                        <IconButton onClick={handleAddChat}>\n                          <SendIcon />\n                        </IconButton>\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n                {currentChatRoom?.chats?.map((chat) => (\n                  <Typography\n                    sx={{\n                      alignSelf:\n                        chat.userId === user._id ? \"flex-end\" : \"flex-start\",\n                    }}\n                  >\n                    {chat.chatText}\n                  </Typography>\n                ))}\n              </Box>\n            )}\n          </Box>\n        </Box>\n      </Paper>\n    </Container>\n  );\n};\n\nexport default ChatPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}