{"ast":null,"code":"import { CREATE_ADVENTURE, UPDATE_ADVENTURE, DELETE_ADVENTURE, GET_ALL_ADVENTURES, GET_ONE_ADVENTURE } from \"../constants/actionTypes\";\nimport * as api from \"../api/index\";\nexport const getAllAdventurePosts = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.getAllAdventurePosts();\n    dispatch({\n      type: GET_ALL_ADVENTURES,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getAdventurePost = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.getAdventurePost(id);\n    dispatch({\n      type: GET_ONE_ADVENTURE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const createAdventurePost = (post, navigate) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.createAdventurePost(post);\n    dispatch({\n      type: CREATE_ADVENTURE,\n      payload: data\n    });\n    navigate(\"/\");\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const updateAdventurePost = (id, post) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updateAdventurePost(id, post);\n    dispatch({\n      type: UPDATE_ADVENTURE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const deleteAdventurePost = id => async dispatch => {\n  try {\n    await api.deleteAdventurePost(id);\n    dispatch({\n      type: DELETE_ADVENTURE,\n      payload: id\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const likeAdventurePost = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.likeAdventurePost(id);\n    dispatch({\n      type: UPDATE_ADVENTURE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"names":["CREATE_ADVENTURE","UPDATE_ADVENTURE","DELETE_ADVENTURE","GET_ALL_ADVENTURES","GET_ONE_ADVENTURE","api","getAllAdventurePosts","dispatch","data","type","payload","error","console","log","getAdventurePost","id","createAdventurePost","post","navigate","updateAdventurePost","deleteAdventurePost","likeAdventurePost"],"sources":["/Users/rahulpatil/Desktop/react-applications/buddy/client/src/actions/adventurePosts.js"],"sourcesContent":["import {\n  CREATE_ADVENTURE,\n  UPDATE_ADVENTURE,\n  DELETE_ADVENTURE,\n  GET_ALL_ADVENTURES,\n  GET_ONE_ADVENTURE,\n} from \"../constants/actionTypes\";\n\nimport * as api from \"../api/index\";\n\nexport const getAllAdventurePosts = () => async (dispatch) => {\n  try {\n    const { data } = await api.getAllAdventurePosts();\n    dispatch({\n      type: GET_ALL_ADVENTURES,\n      payload: data,\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getAdventurePost = (id) => async (dispatch) => {\n  try {\n    const { data } = await api.getAdventurePost(id);\n    dispatch({\n      type: GET_ONE_ADVENTURE,\n      payload: data,\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const createAdventurePost = (post, navigate) => async (dispatch) => {\n  try {\n    const { data } = await api.createAdventurePost(post);\n    dispatch({\n      type: CREATE_ADVENTURE,\n      payload: data,\n    });\n    navigate(\"/\");\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const updateAdventurePost = (id, post) => async (dispatch) => {\n  try {\n    const { data } = await api.updateAdventurePost(id, post);\n    dispatch({\n      type: UPDATE_ADVENTURE,\n      payload: data,\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const deleteAdventurePost = (id) => async (dispatch) => {\n  try {\n    await api.deleteAdventurePost(id);\n    dispatch({\n      type: DELETE_ADVENTURE,\n      payload: id,\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const likeAdventurePost = (id) => async (dispatch) => {\n  try {\n    const { data } = await api.likeAdventurePost(id);\n    dispatch({\n      type: UPDATE_ADVENTURE,\n      payload: data,\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"mappings":"AAAA,SACEA,gBAAgB,EAChBC,gBAAgB,EAChBC,gBAAgB,EAChBC,kBAAkB,EAClBC,iBAAiB,QACZ,0BAA0B;AAEjC,OAAO,KAAKC,GAAG,MAAM,cAAc;AAEnC,OAAO,MAAMC,oBAAoB,GAAG,MAAM,MAAOC,QAAQ,IAAK;EAC5D,IAAI;IACF,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMH,GAAG,CAACC,oBAAoB,EAAE;IACjDC,QAAQ,CAAC;MACPE,IAAI,EAAEN,kBAAkB;MACxBO,OAAO,EAAEF;IACX,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB;AACF,CAAC;AAED,OAAO,MAAMG,gBAAgB,GAAIC,EAAE,IAAK,MAAOR,QAAQ,IAAK;EAC1D,IAAI;IACF,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMH,GAAG,CAACS,gBAAgB,CAACC,EAAE,CAAC;IAC/CR,QAAQ,CAAC;MACPE,IAAI,EAAEL,iBAAiB;MACvBM,OAAO,EAAEF;IACX,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB;AACF,CAAC;AAED,OAAO,MAAMK,mBAAmB,GAAG,CAACC,IAAI,EAAEC,QAAQ,KAAK,MAAOX,QAAQ,IAAK;EACzE,IAAI;IACF,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMH,GAAG,CAACW,mBAAmB,CAACC,IAAI,CAAC;IACpDV,QAAQ,CAAC;MACPE,IAAI,EAAET,gBAAgB;MACtBU,OAAO,EAAEF;IACX,CAAC,CAAC;IACFU,QAAQ,CAAC,GAAG,CAAC;EACf,CAAC,CAAC,OAAOP,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB;AACF,CAAC;AAED,OAAO,MAAMQ,mBAAmB,GAAG,CAACJ,EAAE,EAAEE,IAAI,KAAK,MAAOV,QAAQ,IAAK;EACnE,IAAI;IACF,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMH,GAAG,CAACc,mBAAmB,CAACJ,EAAE,EAAEE,IAAI,CAAC;IACxDV,QAAQ,CAAC;MACPE,IAAI,EAAER,gBAAgB;MACtBS,OAAO,EAAEF;IACX,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB;AACF,CAAC;AAED,OAAO,MAAMS,mBAAmB,GAAIL,EAAE,IAAK,MAAOR,QAAQ,IAAK;EAC7D,IAAI;IACF,MAAMF,GAAG,CAACe,mBAAmB,CAACL,EAAE,CAAC;IACjCR,QAAQ,CAAC;MACPE,IAAI,EAAEP,gBAAgB;MACtBQ,OAAO,EAAEK;IACX,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOJ,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB;AACF,CAAC;AAED,OAAO,MAAMU,iBAAiB,GAAIN,EAAE,IAAK,MAAOR,QAAQ,IAAK;EAC3D,IAAI;IACF,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMH,GAAG,CAACgB,iBAAiB,CAACN,EAAE,CAAC;IAChDR,QAAQ,CAAC;MACPE,IAAI,EAAER,gBAAgB;MACtBS,OAAO,EAAEF;IACX,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}