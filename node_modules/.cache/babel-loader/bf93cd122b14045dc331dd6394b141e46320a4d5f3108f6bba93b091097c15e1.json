{"ast":null,"code":"import { CREATE_FEEDPOST, UPDATE_FEEDPOST, DELETE_FEEDPOST, GET_ALL_FEEDPOST, GET_ONE_FEEDPOST } from \"../constants/actionTypes\";\nimport * as api from \"../api/index\";\nexport const getAllFeedPosts = () => async dispatch => {\n  try {\n    console.log(\"Hello\");\n    const {\n      data\n    } = await api.getAllFeedPosts();\n    dispatch({\n      type: GET_ALL_FEEDPOST,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getFeedPost = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.getFeedPost(id);\n    dispatch({\n      type: GET_ONE_FEEDPOST,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const createFeedPost = (post, navigate) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.createFeedPost(post);\n    dispatch({\n      type: CREATE_FEEDPOST,\n      payload: data\n    });\n    navigate(\"/feed\");\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const updateFeedPost = (post, navigate) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updateFeedPost(post);\n    dispatch({\n      type: UPDATE_FEEDPOST,\n      payload: data\n    });\n    navigate(\"/feed\");\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const deleteFeedPost = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.deleteFeedPost(id);\n    dispatch({\n      type: DELETE_FEEDPOST,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const likeFeedPost = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.likeFeedPost(id);\n    dispatch({\n      type: UPDATE_FEEDPOST,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"names":["CREATE_FEEDPOST","UPDATE_FEEDPOST","DELETE_FEEDPOST","GET_ALL_FEEDPOST","GET_ONE_FEEDPOST","api","getAllFeedPosts","dispatch","console","log","data","type","payload","error","getFeedPost","id","createFeedPost","post","navigate","updateFeedPost","deleteFeedPost","likeFeedPost"],"sources":["/Users/rahulpatil/Desktop/react-applications/buddy/client/src/actions/feedPost.js"],"sourcesContent":["import {\n  CREATE_FEEDPOST,\n  UPDATE_FEEDPOST,\n  DELETE_FEEDPOST,\n  GET_ALL_FEEDPOST,\n  GET_ONE_FEEDPOST,\n} from \"../constants/actionTypes\";\n\nimport * as api from \"../api/index\";\n\nexport const getAllFeedPosts = () => async (dispatch) => {\n  try {\n    console.log(\"Hello\");\n    const { data } = await api.getAllFeedPosts();\n\n    dispatch({\n      type: GET_ALL_FEEDPOST,\n      payload: data,\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getFeedPost = (id) => async (dispatch) => {\n  try {\n    const { data } = await api.getFeedPost(id);\n    dispatch({\n      type: GET_ONE_FEEDPOST,\n      payload: data,\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const createFeedPost = (post, navigate) => async (dispatch) => {\n  try {\n    const { data } = await api.createFeedPost(post);\n    dispatch({\n      type: CREATE_FEEDPOST,\n      payload: data,\n    });\n    navigate(\"/feed\");\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const updateFeedPost = (post, navigate) => async (dispatch) => {\n  try {\n    const { data } = await api.updateFeedPost(post);\n    dispatch({\n      type: UPDATE_FEEDPOST,\n      payload: data,\n    });\n    navigate(\"/feed\");\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const deleteFeedPost = (id) => async (dispatch) => {\n  try {\n    const { data } = await api.deleteFeedPost(id);\n    dispatch({\n      type: DELETE_FEEDPOST,\n      payload: data,\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const likeFeedPost = (id) => async (dispatch) => {\n  try {\n    const { data } = await api.likeFeedPost(id);\n    dispatch({\n      type: UPDATE_FEEDPOST,\n      payload: data,\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"mappings":"AAAA,SACEA,eAAe,EACfC,eAAe,EACfC,eAAe,EACfC,gBAAgB,EAChBC,gBAAgB,QACX,0BAA0B;AAEjC,OAAO,KAAKC,GAAG,MAAM,cAAc;AAEnC,OAAO,MAAMC,eAAe,GAAG,MAAM,MAAOC,QAAQ,IAAK;EACvD,IAAI;IACFC,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;IACpB,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAML,GAAG,CAACC,eAAe,EAAE;IAE5CC,QAAQ,CAAC;MACPI,IAAI,EAAER,gBAAgB;MACtBS,OAAO,EAAEF;IACX,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdL,OAAO,CAACC,GAAG,CAACI,KAAK,CAAC;EACpB;AACF,CAAC;AAED,OAAO,MAAMC,WAAW,GAAIC,EAAE,IAAK,MAAOR,QAAQ,IAAK;EACrD,IAAI;IACF,MAAM;MAAEG;IAAK,CAAC,GAAG,MAAML,GAAG,CAACS,WAAW,CAACC,EAAE,CAAC;IAC1CR,QAAQ,CAAC;MACPI,IAAI,EAAEP,gBAAgB;MACtBQ,OAAO,EAAEF;IACX,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdL,OAAO,CAACC,GAAG,CAACI,KAAK,CAAC;EACpB;AACF,CAAC;AAED,OAAO,MAAMG,cAAc,GAAG,CAACC,IAAI,EAAEC,QAAQ,KAAK,MAAOX,QAAQ,IAAK;EACpE,IAAI;IACF,MAAM;MAAEG;IAAK,CAAC,GAAG,MAAML,GAAG,CAACW,cAAc,CAACC,IAAI,CAAC;IAC/CV,QAAQ,CAAC;MACPI,IAAI,EAAEX,eAAe;MACrBY,OAAO,EAAEF;IACX,CAAC,CAAC;IACFQ,QAAQ,CAAC,OAAO,CAAC;EACnB,CAAC,CAAC,OAAOL,KAAK,EAAE;IACdL,OAAO,CAACC,GAAG,CAACI,KAAK,CAAC;EACpB;AACF,CAAC;AAED,OAAO,MAAMM,cAAc,GAAG,CAACF,IAAI,EAAEC,QAAQ,KAAK,MAAOX,QAAQ,IAAK;EACpE,IAAI;IACF,MAAM;MAAEG;IAAK,CAAC,GAAG,MAAML,GAAG,CAACc,cAAc,CAACF,IAAI,CAAC;IAC/CV,QAAQ,CAAC;MACPI,IAAI,EAAEV,eAAe;MACrBW,OAAO,EAAEF;IACX,CAAC,CAAC;IACFQ,QAAQ,CAAC,OAAO,CAAC;EACnB,CAAC,CAAC,OAAOL,KAAK,EAAE;IACdL,OAAO,CAACC,GAAG,CAACI,KAAK,CAAC;EACpB;AACF,CAAC;AAED,OAAO,MAAMO,cAAc,GAAIL,EAAE,IAAK,MAAOR,QAAQ,IAAK;EACxD,IAAI;IACF,MAAM;MAAEG;IAAK,CAAC,GAAG,MAAML,GAAG,CAACe,cAAc,CAACL,EAAE,CAAC;IAC7CR,QAAQ,CAAC;MACPI,IAAI,EAAET,eAAe;MACrBU,OAAO,EAAEF;IACX,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdL,OAAO,CAACC,GAAG,CAACI,KAAK,CAAC;EACpB;AACF,CAAC;AAED,OAAO,MAAMQ,YAAY,GAAIN,EAAE,IAAK,MAAOR,QAAQ,IAAK;EACtD,IAAI;IACF,MAAM;MAAEG;IAAK,CAAC,GAAG,MAAML,GAAG,CAACgB,YAAY,CAACN,EAAE,CAAC;IAC3CR,QAAQ,CAAC;MACPI,IAAI,EAAEV,eAAe;MACrBW,OAAO,EAAEF;IACX,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdL,OAAO,CAACC,GAAG,CAACI,KAAK,CAAC;EACpB;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}